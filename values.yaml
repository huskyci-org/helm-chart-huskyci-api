# Default values for huskyci-api

replicaCount: 1
cluster: "your-cluster"
namespace: "huskyci-api"

image:
  repository: huskyciorg/huskyci
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

# Environment variables split into plain values and secret references
env:
  - name: HUSKYCI_API_ALLOW_ORIGIN_CORS
    value: "*"
  - name: HUSKYCI_API_ENABLE_HTTPS
    value: "false"
  - name: HUSKYCI_API_PORT
    value: 80
  - name: HUSKYCI_API_GIT_SSH_URL
    value: git@github.com
  - name: HUSKYCI_API_GIT_URL_TO_SUBSTITUTE
    value: https://github.com/
  - name: HUSKYCI_INFRASTRUCTURE_USE
    value: "kubernetes"
  - name: HUSKYCI_KUBERNETES_CONFIG_FILE_PATH
    value: "/config/kubeconfig"
  - name: HUSKYCI_KUBERNETES_NAMESPACE
    value: "huskyci-api"
#  - name: HUSKYCI_KUBERNETES_PROXY_ADDRESS
#    value:
#  - name: HUSKYCI_KUBERNETES_NO_PROXY_ADDRESSES
#    value:
#  - name: HUSKYCI_KUBERNETES_POD_SCHEDULING_TIMEOUT
#    value:


# Secret-based environment variables moved here
envFromSecrets:
  - name: HUSKYCI_API_DEFAULT_PASSWORD
    secretName: huskyci-api-secrets
    key: huskyci-api-default-password
  - name: HUSKYCI_API_DEFAULT_USERNAME
    secretName: huskyci-api-secrets
    key: huskyci-api-default-username
  - name: HUSKYCI_DATABASE_DB_ADDR
    secretName: huskyci-api-secrets
    key: huskyci-api-database-db-address
  - name: HUSKYCI_DATABASE_DB_NAME
    secretName: huskyci-api-secrets
    key: huskyci-api-database-db-name
  - name: HUSKYCI_DATABASE_DB_PASSWORD
    secretName: huskyci-api-secrets
    key: huskyci-api-database-db-password
  - name: HUSKYCI_DATABASE_DB_USERNAME
    secretName: huskyci-api-secrets
    key: huskyci-api-database-db-username
  - name: HUSKYCI_API_GIT_PRIVATE_SSH_KEY
    secretName: huskyci-api-secrets
    key: huskyci-api-git-ssh-private-key

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: "huskyci-api-serviceaccount"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop: [ALL]
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

#ingress:
#  enabled: true
#  annotations:
#    external-dns.alpha.kubernetes.io/hostname: huskyci-api.your-domain.com
#    alb.ingress.kubernetes.io/backend-protocol: HTTP
#    alb.ingress.kubernetes.io/conditions.huskyci-api-service: >
#      [{"field":"path-pattern","pathPatternConfig":{"values":["/*"]}}]
#    alb.ingress.kubernetes.io/group.name: applications
#    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
#    alb.ingress.kubernetes.io/scheme: internal
#    alb.ingress.kubernetes.io/ssl-redirect: "80"
#    alb.ingress.kubernetes.io/success-codes: 200,404,301,302
#    alb.ingress.kubernetes.io/target-type: ip
#  spec:
#    ingressClassName: alb
#    rules:
#      - host: huskyci-api.your-domain.com
#        http:
#          paths:
#            - path: /*
#              pathType: ImplementationSpecific
#              backend:
#                service:
#                  name: huskyci-api-service
#                  port:
#                    number: 80
#  hosts:
#    - host: huskyci-api.k8s.dc.anotaai-security.com
#      paths:
#        - path: /
#          pathType: ImplementationSpecific
#  tls: []
  #  - secretName: chart-example-tls
  #    hosts: [chart-example.local]

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthcheck
    port: http

readinessProbe: 
  httpGet:
    path: /version
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
